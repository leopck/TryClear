/**
 * Created by chenyu on 15/2/15.
 * Modified by Rebecca and Stanley..
 */

var description_info = {
    "1":{"number": 1,
        "title":"Welcome to Clear Linux Web-based Training!",
        "instructions": "<p>This guide will show you the development workflow on Clear Linux. We will cover development environment setup, buidling your first Clear Linux package, creating spec file for your open source project using autospec, integrating your local RPM content using mixin and creating your own custom Clear Linux image using mixer.\n</p>\n\n\n\n\n<p>First of all, let's download the Clear Linux user setup script:</p><p><code class=\"input\">curl -O https://raw.githubusercontent.com/clearlinux/common/master/user-setup.sh</code></p>",
        "file_browser": {"files": [], "name": "/home/clearuser"},
        "advice": "<p><strong>Addtional resources：</strong><strong>Read more about <code><a href='https://github.com/clearlinux/common'>Developer tooling framework for Clear Linux</a></code>.</strong></p>\n\n<p><strong>Read more about <code><a href='https://github.com/clearlinux/autospec'>Autospec</a></code>.</strong></p>\n\n"
    },

    "2":{"number": 2,
        "title":"Let's setup Developer tooling framework for Clear Linux.",
        "instructions": "<p>Great! You have downloaded the user setup script. This script will help you to setup a Clear Linux development environment. Before we launch the user setup script, let's change the script accessibility permission to enable unprivileged user's execution.</p>\n\n\n\n\n<p></p>\n\n\n\n\n<p>Now, enter the command below to change file permission: </p>\n\n\n\n\n<p><code class=\"input\">chmod +x user-setup.sh</code></p>",
        "file_browser": {"files": ["user-setup.sh"], "name": "/home/clearuser"},
        "advice": "<p><strong></strong></p>\n\n<p></p>\n"
    },

    "3":{"number": 3,
        "title":"Run the user setup script.",
        "instructions": "<p>We can run the setup process by launching the <code>user-setup.sh</code> script as an unprivileged user.</p>\n\n\n\n\n<p>This script will download Clear Linux developer tooling framework into a folder named <code>clearlinux</code>. Let's run the command below:</p>\n\n\n\n\n<p><code class=\"input\">./user-setup.sh</code></p>",
        "file_browser":{"files":["user-setup.sh"], "name":"/home/clearuser"},
        "advice": "<p><strong>Manual Setup</strong>\nIf you do not wish to run the user-setup script, you can refer to <code><a href='https://github.com/clearlinux/common#manual-setup'>manual setup</code> for hints about how to initialize the tooling workspace.</p>"
    },

    "4":{
        "number": 4,
        "title":"添加更改的文件",
        "instructions": "<p>现在Git运行正常。 注意：为什么Git中 <code>octocat.txt</code> 是 \"untracked(未跟踪的)\"? 这表明在git中 <code>octocat.txt</code>是一个新建文件，还没有被添加到本地git库中。</p>\n\n\n\n\n<p>为了让Git开始追踪<code>octocat.txt</code>的变化，首先使用<code>git add</code>添加这个文件到暂存区。</p>\n\n\n\n\n<p><code class=\"input\">git add octocat.txt</code></p>",
        "file_browser":{"files":[{"name":"octocat.txt","status":"q"},".git/branches/",".git/objects/info/",".git/objects/pack/",".git/refs/heads/",".git/refs/tags/",".git/HEAD",".git/config",".git/description",".git/hooks/applypatch-msg.sample",".git/hooks/commit-msg.sample",".git/hooks/post-commit.sample",".git/hooks/post-receive.sample",".git/hooks/post-update.sample",".git/hooks/pre-applypatch.sample",".git/hooks/pre-commit.sample",".git/hooks/pre-rebase.sample",".git/hooks/prepare-commit-msg.sample",".git/hooks/update.sample",".git/info/exclude"],"name":"My Octobox Repository"},
        "advice": "<p><strong>暂存区：</strong> 文件已经被提交</p>\n\n<p> <strong>非暂存区：</strong> 变化的文件还没准备被提交</p>\n\n<p> <strong>未追踪的:</strong> 没有被追踪的文件。这通常表示新创建的文件</p>\n\n<p> <strong>删除的：</strong> 已经在Git库中删除的文件和将要从Git库中删除的文件。</p>\n"
    },

    "5":{
        "number": 5,
        "title":"检查变更文件",
        "instructions":"<p>好， Git正在追踪文件 <code>octocat.txt</code>。再一次运行\n<code>git status</code> 看一下文件所处的位置：</p>\n\n\n\n\n<p><code class=\"input\">git status</code></p>",
        "file_browser":{"files":[{"name":"octocat.txt","status":"a"},".git/branches/",".git/objects/info/",".git/objects/pack/",".git/refs/heads/",".git/refs/tags/",".git/HEAD",".git/config",".git/description",".git/hooks/applypatch-msg.sample",".git/hooks/commit-msg.sample",".git/hooks/post-commit.sample",".git/hooks/post-receive.sample",".git/hooks/post-update.sample",".git/hooks/pre-applypatch.sample",".git/hooks/pre-commit.sample",".git/hooks/pre-rebase.sample",".git/hooks/prepare-commit-msg.sample",".git/hooks/update.sample",".git/index",".git/info/exclude",".git/objects/21/e250f8f09826955e872705290c007fa0a889e7"],"name":"My Octobox Repository"},
        "advice": "<p><strong>添加所有：</strong> 你也可以在光标位置输入 <code>git add -A .</code>， 那么所有的文件都会在他下面 <em>添加</em>。 这个 <code>-A</code> 保证甚至是删除的文件都被包含。</p>\n\n<p><strong>git reset:</strong> 你可以使用 <code>git reset &lt;filename&gt;</code> 移除文件或者暂存区文件。</p>\n"
    },

    "6":{
        "number": 6,
        "title":"提交",
        "instructions":"<p>Git表明 <code>修改需要被提交</code>? 在终端列出<code>暂存区</code>需要提交的文件，他们还没有在我们的git管理库。在把文件存到git仓库之前，可以添加和删除暂存区中的文件。</p>\n\n\n\n\n<p>提交暂存区文件的改变到本地的git库中，执行 <code>commit</code> 命令 在 \"-m\"后面添加文件变更的描述信息，运行:</p>\n\n\n\n\n<p><code class=\"input\">git commit -m \"Add cute octocat story\"</code></p>",
        "file_browser":{"files":[{"name":"octocat.txt","status":"a"},".git/branches/",".git/objects/info/",".git/objects/pack/",".git/refs/heads/",".git/refs/tags/",".git/HEAD",".git/config",".git/description",".git/hooks/applypatch-msg.sample",".git/hooks/commit-msg.sample",".git/hooks/post-commit.sample",".git/hooks/post-receive.sample",".git/hooks/post-update.sample",".git/hooks/pre-applypatch.sample",".git/hooks/pre-commit.sample",".git/hooks/pre-rebase.sample",".git/hooks/prepare-commit-msg.sample",".git/hooks/update.sample",".git/index",".git/info/exclude",".git/objects/21/e250f8f09826955e872705290c007fa0a889e7"],"name":"My Octobox Repository"},
        "advice": "<p><strong>暂存区：</strong>\n在我们\"commit\"变更文件到Git库之前，组织变更文件在一起的区域。</p>\n\n<p><strong>提交</strong>一次 \"commit\" 是我们Git库的一次快照。这样，我们可以回顾那些我们做过的更改(或者其他人做的)，我们将会看到所有改变的一个时间表。</p>\n"
    },

    "7":{
        "number": 7,
        "title":"添加所有更改",
        "instructions":"<p>太好了! 如果你想添加相同类型的多个文件，你也可以使用通配符添加文件到Git库里。注意：我已经添加所有的.txt文件到你本地的目录下。</p>\n\n\n\n\n<p>我放了一些名叫\"octofamily\"的文件放到下面的根目录下。使用 <code>git add</code>+通配符 添加所有新建的文件。不要忘记引号！ </p>\n\n\n\n\n<p><code class=\"input\">git add '*.txt'</code></p>",
        "file_browser":{"files":[{"name":"blue_octocat.txt","status":"q"},"octocat.txt",{"name":"red_octocat.txt","status":"q"},{"name":"octofamily/baby_octocat.txt","status":"q"},{"name":"octofamily/momma_octocat.txt","status":"q"},".git/branches/",".git/info/",".git/logs/refs/heads/",".git/objects/14/",".git/objects/21/",".git/objects/43/",".git/objects/info/",".git/objects/pack/",".git/refs/heads/",".git/refs/tags/",".git/COMMIT_EDITMSG",".git/HEAD",".git/config",".git/description",".git/hooks/applypatch-msg.sample",".git/hooks/commit-msg.sample",".git/hooks/post-commit.sample",".git/hooks/post-receive.sample",".git/hooks/post-update.sample",".git/hooks/pre-applypatch.sample",".git/hooks/pre-commit.sample",".git/hooks/pre-rebase.sample",".git/hooks/prepare-commit-msg.sample",".git/hooks/update.sample",".git/index",".git/info/exclude",".git/logs/HEAD",".git/logs/refs/heads/master",".git/objects/14/b2cf8cd9d24890f7168c534e5c0cd203b1d5a0",".git/objects/21/e250f8f09826955e872705290c007fa0a889e7",".git/objects/43/61a821f32cd9f39a074c58aa542454c4706174",".git/refs/heads/master"],"name":"My Octobox Repository"},
        "advice": "<p><strong>通配符：</strong>\n我们需要引号，这样在我们的shell程序之前，Git会接收到通配符 \n 不包括引号我们的shell只会执行\n当前目录中的通配符搜索。 Git将会接收shell找到的文件列表\n代替通配符，并且它将被添加到octofamily目录里面\n。</p>\n"
    },

    "8":{
        "number": 8,
        "title":"提交所有更改",
        "instructions":"<p>你已经把所有的文本文件添加到暂存区。运行 git status 看一下你提交的文件。</p>\n\n\n\n\n<p>提交所有的修改，运行：</p>\n\n\n\n\n<p><code class=\"input\">git commit -m 'Add all the octocat txt files'</code></p>",
        "file_browser":{"files":[".git/branches/",".git/logs/refs/heads/",".git/objects/",".git/objects/19/",".git/objects/43/",".git/objects/61/",".git/objects/6a/",".git/objects/7b/",".git/objects/7d/",".git/objects/c0/",".git/objects/info/",".git/objects/pack/",".git/refs/heads/",".git/refs/tags/",".git/COMMIT_EDITMSG",".git/HEAD",".git/config",".git/description",".git/hooks/applypatch-msg.sample",".git/hooks/commit-msg.sample",".git/hooks/post-commit.sample",".git/hooks/post-receive.sample",".git/hooks/post-update.sample",".git/hooks/pre-applypatch.sample",".git/hooks/pre-commit.sample",".git/hooks/pre-rebase.sample",".git/hooks/prepare-commit-msg.sample",".git/hooks/update.sample",".git/index",".git/info/exclude",".git/logs/HEAD",".git/logs/refs/heads/master",".git/objects/19/ee2b63f71acf4d177acfbedbed44055ae8c781",".git/objects/43/51fcb0bd53c419b0a15d0edd6555a83b0b4e27",".git/objects/61/1fd146eb0acecd745fa8d09628d9944f5f6722",".git/objects/6a/eed352591d483ca6a598acb7a6775ab3f8c764",".git/objects/7b/dd2fb87dec4c770b3c29a3b144628adba2c511",".git/objects/7d/8d808913c9e07a2cfd4bed4b99f18490af335c",".git/objects/c0/9729a0b9008619d9f950bd6247973bd193afdb",".git/refs/heads/master","blue_octocat.txt","octocat.txt","octofamily/baby_octocat.txt","octofamily/momma_octocat.txt","red_octocat.txt"],"name":"My Octobox Repository"},
        "advice": "<p><strong>检查所有文件!</strong></p>\n\n<p>当你使用通配符时，你需要更加注意你的某些提交。\n在你真正提交之前，一定要使用\n<code>git status</code>检查文件的状态。这样可以确保\n你提交的东西是正确的。</p>\n"
    },

    "9":{
        "number": 9,
        "title":"历史",
        "instructions":"<p>上一节，我们做了一些提交。现在看一下我们做了哪些修改。很幸运可以使用 <code>git log</code>。 git log会按顺序记住我们所有的提交。运行：</p>\n\n\n\n\n<p><code class=\"input\">git log</code></p>",
        "file_browser":{"files":["blue_octocat.txt","octocat.txt","red_octocat.txt","octofamily/baby_octocat.txt","octofamily/momma_octocat.txt",".git/branches/",".git/logs/refs/heads/",".git/objects/0f/",".git/objects/14/",".git/objects/18/",".git/objects/21/",".git/objects/35/",".git/objects/42/",".git/objects/50/",".git/objects/5b/",".git/objects/86/",".git/objects/fa/",".git/objects/info/",".git/objects/pack/",".git/refs/heads/",".git/refs/tags/",".git/COMMIT_EDITMSG",".git/HEAD",".git/config",".git/description",".git/hooks/applypatch-msg.sample",".git/hooks/commit-msg.sample",".git/hooks/post-commit.sample",".git/hooks/post-receive.sample",".git/hooks/post-update.sample",".git/hooks/pre-applypatch.sample",".git/hooks/pre-commit.sample",".git/hooks/pre-rebase.sample",".git/hooks/prepare-commit-msg.sample",".git/hooks/update.sample",".git/index",".git/info/exclude",".git/logs/HEAD",".git/logs/refs/heads/master",".git/objects/0f/60a05f07b867fa1c7af4000985fe05f2818f8c",".git/objects/14/b2cf8cd9d24890f7168c534e5c0cd203b1d5a0",".git/objects/18/60866072e5ebb7f4fcaee36aca2d0a4360dacb",".git/objects/21/e250f8f09826955e872705290c007fa0a889e7",".git/objects/35/f80856cdfdb3df8c79781f49afbea3b33c3854",".git/objects/42/32ffe9c487c1e7c8bd4eadbe11d038e8847a7a",".git/objects/50/ed4c36b03b912df1632d4c8468f77586369ecc",".git/objects/5b/e38fca73d29c41fa5fb0d8e4971f209e5612b9",".git/objects/86/bc8807ba99e381cd55d848b29b9b16ac2989a0",".git/objects/fa/0bb6ce2d175673c5781b2181602556677f8708",".git/refs/heads/master"],"name":"My Octobox Repository"},
        "advice": "<p><strong>更多有用的日志：</strong>\n使用 <code>git log --summary</code> 为每一次的提交查看更多的信息。 你可以\n看到你的文件第一次提交的位置或者删除的位置。这样可以总览整个工程完成的过程。</p>\n"
    },

    "10":{
        "number": 10,
        "title":"远程仓库",
        "instructions":"<p>现在已经在<code>https://github.com/try-git/try_git.git</code>创建了一个空Github仓库。推送本地的 <i>仓库repo</i> 到Github服务器。添加一个远程仓库，名为 <i>remote name</i> 和仓库地址 <i>repository URL</i>，当前项目中远程仓库的网址是 <code>https://github.com/try-git/try_git.git</code>。</p>\n\n\n\n\n<p>用下面的命令<code>git remote add</code>添加远程仓库</p>\n\n\n\n\n<p>运行：<code class=\"input\">git remote add origin https://github.com/try-git/try_git.git</code></p>",
        "file_browser":{"files":["octobox/blue_octocat.txt","octobox/octocat.txt","octobox/red_octocat.txt","octobox/octofamily/baby_octocat.txt","octobox/octofamily/momma_octocat.txt",".git/branches/",".git/logs/refs/heads/",".git/objects/0f/",".git/objects/14/",".git/objects/18/",".git/objects/21/",".git/objects/35/",".git/objects/42/",".git/objects/50/",".git/objects/5b/",".git/objects/86/",".git/objects/fa/",".git/objects/info/",".git/objects/pack/",".git/refs/heads/",".git/refs/tags/",".git/COMMIT_EDITMSG",".git/HEAD",".git/config",".git/description",".git/hooks/applypatch-msg.sample",".git/hooks/commit-msg.sample",".git/hooks/post-commit.sample",".git/hooks/post-receive.sample",".git/hooks/post-update.sample",".git/hooks/pre-applypatch.sample",".git/hooks/pre-commit.sample",".git/hooks/pre-rebase.sample",".git/hooks/prepare-commit-msg.sample",".git/hooks/update.sample",".git/index",".git/info/exclude",".git/logs/HEAD",".git/logs/refs/heads/master",".git/objects/0f/60a05f07b867fa1c7af4000985fe05f2818f8c",".git/objects/14/b2cf8cd9d24890f7168c534e5c0cd203b1d5a0",".git/objects/18/60866072e5ebb7f4fcaee36aca2d0a4360dacb",".git/objects/21/e250f8f09826955e872705290c007fa0a889e7",".git/objects/35/f80856cdfdb3df8c79781f49afbea3b33c3854",".git/objects/42/32ffe9c487c1e7c8bd4eadbe11d038e8847a7a",".git/objects/50/ed4c36b03b912df1632d4c8468f77586369ecc",".git/objects/5b/e38fca73d29c41fa5fb0d8e4971f209e5612b9",".git/objects/86/bc8807ba99e381cd55d848b29b9b16ac2989a0",".git/objects/fa/0bb6ce2d175673c5781b2181602556677f8708",".git/refs/heads/master"],"name":"My Octobox Repository"},
        "advice": "<p><strong>git remote:</strong>\nGit不会介意你如何命名远程仓库，但是要命名一个标准的<code>origin</code>仓库。</p>\n\n<p>把你的仓库放在远程服务器<a href=\"http://github.com\">GitHub</a>上非常不错，以防万一你的机器进水或者被什么沉重的物件给压坏了。</p>\n"
    },

    "11":{
        "number": 11,
        "title":"远程推送",
        "instructions":"<p>push命令告诉Git把准备好的commit推送到哪里。\n让我们尝试推送本地的更改到<strong>源</strong> 仓库 (on GitHub).</p>\n\n\n\n\n<p>源库 名为 <code>origin</code> 并且默认的本地分支名为<code>master</code>。 <code>-u</code> 告诉 Git 记录远程源仓库的参数，\n这样下次我们可以更简单地执行<code>git push</code>推送到Git库中。 现在执行</p>\n\n\n\n\n<p><code class=\"input\">git push -u origin master</code></p>",
        "file_browser":{"files":["blue_octocat.txt","octocat.txt","red_octocat.txt","octofamily/baby_octocat.txt","octofamily/momma_octocat.txt",".git/branches/",".git/logs/refs/heads/",".git/objects/08/",".git/objects/0f/",".git/objects/14/",".git/objects/21/",".git/objects/2c/",".git/objects/35/",".git/objects/50/",".git/objects/5b/",".git/objects/86/",".git/objects/fa/",".git/objects/info/",".git/objects/pack/",".git/refs/tags/",".git/COMMIT_EDITMSG",".git/HEAD",".git/config",".git/description",".git/hooks/applypatch-msg.sample",".git/hooks/commit-msg.sample",".git/hooks/post-commit.sample",".git/hooks/post-receive.sample",".git/hooks/post-update.sample",".git/hooks/pre-applypatch.sample",".git/hooks/pre-commit.sample",".git/hooks/pre-rebase.sample",".git/hooks/prepare-commit-msg.sample",".git/hooks/update.sample",".git/index",".git/info/exclude",".git/logs/HEAD",".git/logs/refs/heads/master",".git/objects/08/f7b696d446c7b9bdf9837d2a25400a2a5325e3",".git/objects/0f/60a05f07b867fa1c7af4000985fe05f2818f8c",".git/objects/14/b2cf8cd9d24890f7168c534e5c0cd203b1d5a0",".git/objects/21/e250f8f09826955e872705290c007fa0a889e7",".git/objects/2c/baca6ea9fecca7d456b8a14ad46f5a21bb4ae9",".git/objects/35/f80856cdfdb3df8c79781f49afbea3b33c3854",".git/objects/50/ed4c36b03b912df1632d4c8468f77586369ecc",".git/objects/5b/e38fca73d29c41fa5fb0d8e4971f209e5612b9",".git/objects/86/bc8807ba99e381cd55d848b29b9b16ac2989a0",".git/objects/fa/0bb6ce2d175673c5781b2181602556677f8708",".git/refs/heads/master"],"name":"My Octobox Repository"},
        "advice": "<p><strong>这是非常美妙的:</strong>\n当你掌握了Git，你可以使用推送对\n <code>hooks</code>做很多事情</p>\n\n<p>例如,无论何时你都可以直接推送你的更改到远程服务器上\n 而不需要添加远程网址。 查看 <a href=\"http://git-scm.com/book/en/Customizing-Git-Git-Hooks\">Customizing Git - Git Hooks</a> 获取更多信息。</p>\n"
    },

    "12":{
        "number": 12,
        "title":"远程拉取代码",
        "instructions":"<p>假设过一段时间. 我们邀请一些人加入我们github上的工程，\n他们拉取了你的代码，并做了修改、提交。</p>\n\n\n\n\n<p>我们可以检查并拉取远程Git库中的更改，运行:</p>\n\n\n\n\n<p><code class=\"input\">git pull origin master</code></p>",
        "file_browser":{"files":["blue_octocat.txt","octocat.txt","red_octocat.txt","octofamily/baby_octocat.txt","octofamily/momma_octocat.txt",".git/branches/",".git/logs/refs/heads/",".git/objects/08/",".git/objects/0f/",".git/objects/14/",".git/objects/21/",".git/objects/2c/",".git/objects/35/",".git/objects/50/",".git/objects/5b/",".git/objects/86/",".git/objects/fa/",".git/objects/info/",".git/objects/pack/",".git/refs/tags/",".git/COMMIT_EDITMSG",".git/HEAD",".git/config",".git/description",".git/hooks/applypatch-msg.sample",".git/hooks/commit-msg.sample",".git/hooks/post-commit.sample",".git/hooks/post-receive.sample",".git/hooks/post-update.sample",".git/hooks/pre-applypatch.sample",".git/hooks/pre-commit.sample",".git/hooks/pre-rebase.sample",".git/hooks/prepare-commit-msg.sample",".git/hooks/update.sample",".git/index",".git/info/exclude",".git/logs/HEAD",".git/logs/refs/heads/master",".git/objects/08/f7b696d446c7b9bdf9837d2a25400a2a5325e3",".git/objects/0f/60a05f07b867fa1c7af4000985fe05f2818f8c",".git/objects/14/b2cf8cd9d24890f7168c534e5c0cd203b1d5a0",".git/objects/21/e250f8f09826955e872705290c007fa0a889e7",".git/objects/2c/baca6ea9fecca7d456b8a14ad46f5a21bb4ae9",".git/objects/35/f80856cdfdb3df8c79781f49afbea3b33c3854",".git/objects/50/ed4c36b03b912df1632d4c8468f77586369ecc",".git/objects/5b/e38fca73d29c41fa5fb0d8e4971f209e5612b9",".git/objects/86/bc8807ba99e381cd55d848b29b9b16ac2989a0",".git/objects/fa/0bb6ce2d175673c5781b2181602556677f8708",".git/refs/heads/master"],"name":"My Octobox Repository"},
        "advice": "<p><strong>git stash:</strong>\n有时候拉取代码，但你有不想提交的修改。\n 你可以隐藏这个修改而不是提交它。</p>\n\n<p>使用'<code>git stash</code>' 隐藏你的更改， 拉取代码后，使用'<code>git&nbsp;stash&nbsp;apply</code>'\n恢复你隐藏的更改。</p>\n"
    },

    "13":{
        "number": 13,
        "title":"差异",
        "instructions":"<p>关于octocat的文件好像做了一些修改。看看跟上次提交相比，有什么更改，使用 <code>git diff</code> 命令。</p>\n\n\n\n\n<p>在一般情况下，我们希望获取与最近一次提交的差异，参考使用<code>HEAD</code>指针。</p>\n\n\n\n\n<p><code class=\"input\">git diff HEAD</code></p>",
        "file_browser":{"files":["blue_octocat.txt","octocat.txt","red_octocat.txt","octofamily/baby_octocat.txt","octofamily/momma_octocat.txt",".git/branches/",".git/logs/refs/heads/",".git/objects/0f/",".git/objects/14/",".git/objects/21/",".git/objects/35/",".git/objects/50/",".git/objects/5b/",".git/objects/6e/",".git/objects/86/",".git/objects/f2/",".git/objects/fa/",".git/objects/info/",".git/objects/pack/",".git/refs/tags/",".git/COMMIT_EDITMSG",".git/HEAD",".git/config",".git/description",".git/hooks/applypatch-msg.sample",".git/hooks/commit-msg.sample",".git/hooks/post-commit.sample",".git/hooks/post-receive.sample",".git/hooks/post-update.sample",".git/hooks/pre-applypatch.sample",".git/hooks/pre-commit.sample",".git/hooks/pre-rebase.sample",".git/hooks/prepare-commit-msg.sample",".git/hooks/update.sample",".git/index",".git/info/exclude",".git/logs/HEAD",".git/logs/refs/heads/master",".git/objects/0f/60a05f07b867fa1c7af4000985fe05f2818f8c",".git/objects/14/b2cf8cd9d24890f7168c534e5c0cd203b1d5a0",".git/objects/21/e250f8f09826955e872705290c007fa0a889e7",".git/objects/35/f80856cdfdb3df8c79781f49afbea3b33c3854",".git/objects/50/ed4c36b03b912df1632d4c8468f77586369ecc",".git/objects/5b/e38fca73d29c41fa5fb0d8e4971f209e5612b9",".git/objects/6e/92e2d378cee4e380ac5816b9cbe5ac01749720",".git/objects/86/bc8807ba99e381cd55d848b29b9b16ac2989a0",".git/objects/f2/ac0879e42ca81c62b14e92af6a2d0aeb1f9779",".git/objects/fa/0bb6ce2d175673c5781b2181602556677f8708",".git/refs/heads/master"],"name":"My Octobox Repository"},
        "advice": "<p><strong>HEAD</strong>\nThe HEAD是一个指针，它指向你各种不同提交的位置。\n默认 HEAD 指向你最近的一次提交版本，它可以作为快速查看提交的方式，不需要查看SHA版本号。</p>\n"
    },

    "14":{
        "number": 14,
        "title":"暂存差异",
        "instructions":"<p><code>diff</code>的另一个重要用途是查看暂存区文件的变化。它告诉git需要添加哪些文件。使用 <code>git add</code> 文件 <code>octofamily/octodog.txt</code>存储到暂存区。</p>\n\n\n\n\n<p><code class=\"input\">git add octofamily/octodog.txt</code></p>",
        "file_browser":{"files":["blue_octocat.txt","octocat.txt","red_octocat.txt","octofamily/baby_octocat.txt","octofamily/momma_octocat.txt",{"name":"octofamily/octodog.txt","status":"q"},".git/branches/",".git/logs/refs/heads/",".git/objects/0f/",".git/objects/14/",".git/objects/21/",".git/objects/35/",".git/objects/50/",".git/objects/5b/",".git/objects/6e/",".git/objects/86/",".git/objects/f2/",".git/objects/fa/",".git/objects/info/",".git/objects/pack/",".git/refs/tags/",".git/COMMIT_EDITMSG",".git/HEAD",".git/config",".git/description",".git/hooks/applypatch-msg.sample",".git/hooks/commit-msg.sample",".git/hooks/post-commit.sample",".git/hooks/post-receive.sample",".git/hooks/post-update.sample",".git/hooks/pre-applypatch.sample",".git/hooks/pre-commit.sample",".git/hooks/pre-rebase.sample",".git/hooks/prepare-commit-msg.sample",".git/hooks/update.sample",".git/index",".git/info/exclude",".git/logs/HEAD",".git/logs/refs/heads/master",".git/objects/0f/60a05f07b867fa1c7af4000985fe05f2818f8c",".git/objects/14/b2cf8cd9d24890f7168c534e5c0cd203b1d5a0",".git/objects/21/e250f8f09826955e872705290c007fa0a889e7",".git/objects/35/f80856cdfdb3df8c79781f49afbea3b33c3854",".git/objects/50/ed4c36b03b912df1632d4c8468f77586369ecc",".git/objects/5b/e38fca73d29c41fa5fb0d8e4971f209e5612b9",".git/objects/6e/92e2d378cee4e380ac5816b9cbe5ac01749720",".git/objects/86/bc8807ba99e381cd55d848b29b9b16ac2989a0",".git/objects/f2/ac0879e42ca81c62b14e92af6a2d0aeb1f9779",".git/objects/fa/0bb6ce2d175673c5781b2181602556677f8708",".git/refs/heads/master"],"name":"My Octobox Repository"},
        "advice": "<p><strong>提交规范：</strong>\n你要尽量保持相关的更改在同一次单独的提交。使用 '<code>git diff</code>' 可以查看文件的变化并且可以单独添加和提交文件。</p>\n"
    },

    "15":{
        "number": 15,
        "title":"暂存差异 (续)",
        "instructions":"<p>执行<code>git diff --staged</code> 查看暂存区中的改变。你可以看见 <code>octodog.txt</code>已经创建.</p>\n\n\n\n\n<p><code class=\"input\">git diff --staged</code></p>",
        "file_browser":{"files":["blue_octocat.txt","octocat.txt","red_octocat.txt","octofamily/baby_octocat.txt","octofamily/momma_octocat.txt",{"name":"octofamily/octodog.txt","status":"a"},".git/branches/",".git/logs/refs/heads/",".git/objects/0f/",".git/objects/14/",".git/objects/21/",".git/objects/35/",".git/objects/50/",".git/objects/5b/",".git/objects/6e/",".git/objects/86/",".git/objects/f2/",".git/objects/fa/",".git/objects/info/",".git/objects/pack/",".git/refs/tags/",".git/COMMIT_EDITMSG",".git/HEAD",".git/config",".git/description",".git/hooks/applypatch-msg.sample",".git/hooks/commit-msg.sample",".git/hooks/post-commit.sample",".git/hooks/post-receive.sample",".git/hooks/post-update.sample",".git/hooks/pre-applypatch.sample",".git/hooks/pre-commit.sample",".git/hooks/pre-rebase.sample",".git/hooks/prepare-commit-msg.sample",".git/hooks/update.sample",".git/index",".git/info/exclude",".git/logs/HEAD",".git/logs/refs/heads/master",".git/objects/0f/60a05f07b867fa1c7af4000985fe05f2818f8c",".git/objects/14/b2cf8cd9d24890f7168c534e5c0cd203b1d5a0",".git/objects/21/e250f8f09826955e872705290c007fa0a889e7",".git/objects/35/f80856cdfdb3df8c79781f49afbea3b33c3854",".git/objects/50/ed4c36b03b912df1632d4c8468f77586369ecc",".git/objects/5b/e38fca73d29c41fa5fb0d8e4971f209e5612b9",".git/objects/6e/92e2d378cee4e380ac5816b9cbe5ac01749720",".git/objects/86/bc8807ba99e381cd55d848b29b9b16ac2989a0",".git/objects/f2/ac0879e42ca81c62b14e92af6a2d0aeb1f9779",".git/objects/fa/0bb6ce2d175673c5781b2181602556677f8708",".git/refs/heads/master"],"name":"My Octobox Repository"},
        "advice": "<p><strong>提交规范：</strong>\n你要尽量保持相关的更改在同一次单独的提交。使用 '<code>git diff</code>' 可以查看文件的变化并且可以单独添加和提交文件。</p>\n"
    },

    "16":{
        "number": 16,
        "title":"重置暂存区",
        "instructions":"<p>octodog是octofamily文件中的一部分，与octodog文件相比octocat文件会更好，我们将会删除 <code>octodog.txt</code>.</p>\n\n\n\n\n<p>使用<code>git reset</code>\n命令删除更改，即删除文件<code>octofamily/octodog.txt</code>.</p>\n\n\n\n\n<p><code class=\"input\">git reset octofamily/octodog.txt</code></p>",
        "file_browser":{"files":["blue_octocat.txt","octocat.txt","red_octocat.txt","octofamily/baby_octocat.txt","octofamily/momma_octocat.txt",{"name":"octofamily/octodog.txt","status":"a"},".git/branches/",".git/logs/refs/heads/",".git/objects/01/",".git/objects/0f/",".git/objects/14/",".git/objects/21/",".git/objects/35/",".git/objects/50/",".git/objects/5b/",".git/objects/86/",".git/objects/ae/",".git/objects/d7/",".git/objects/fa/",".git/objects/info/",".git/objects/pack/",".git/refs/heads/",".git/refs/tags/",".git/COMMIT_EDITMSG",".git/HEAD",".git/config",".git/description",".git/hooks/applypatch-msg.sample",".git/hooks/commit-msg.sample",".git/hooks/post-commit.sample",".git/hooks/post-receive.sample",".git/hooks/post-update.sample",".git/hooks/pre-applypatch.sample",".git/hooks/pre-commit.sample",".git/hooks/pre-rebase.sample",".git/hooks/prepare-commit-msg.sample",".git/hooks/update.sample",".git/index",".git/info/exclude",".git/logs/HEAD",".git/logs/refs/heads/master",".git/objects/01/53ce9cb422a63641deddc5e203c98200f6fdf5",".git/objects/0f/60a05f07b867fa1c7af4000985fe05f2818f8c",".git/objects/14/b2cf8cd9d24890f7168c534e5c0cd203b1d5a0",".git/objects/21/e250f8f09826955e872705290c007fa0a889e7",".git/objects/35/f80856cdfdb3df8c79781f49afbea3b33c3854",".git/objects/50/ed4c36b03b912df1632d4c8468f77586369ecc",".git/objects/5b/e38fca73d29c41fa5fb0d8e4971f209e5612b9",".git/objects/86/bc8807ba99e381cd55d848b29b9b16ac2989a0",".git/objects/ae/c1852c976de9599d3b5947b7807c61e6edac21",".git/objects/d7/ef7c823376d542bc65562edaa6b400d27bc58e",".git/objects/fa/0bb6ce2d175673c5781b2181602556677f8708",".git/refs/heads/master"],"name":"My Octobox Repository"},
        "advice": "<p><strong>提交规范：</strong>\n你要尽量保持相关的更改在同一次单独的提交。使用 '<code>git diff</code>' 可以查看文件的变化并且可以单独添加和提交文件。</p>\n"
    },

    "17":{
        "number": 17,
        "title":"撤销",
        "instructions":"<p>使用<code>git reset</code> 将octodog.txt从暂存区中删除，但你在本地可以看到它还在所在文件夹中。你仅仅将它从暂存区中删掉。 如果我们能回到octodog创建之前的状态就好了。</p>\n\n\n\n\n<p>通过使用以下命令可以将文件恢复到最近一次提交时的状态： <code>git checkout -- &lt;target&gt;</code>。去掉文件 <code>octocat.txt</code>自上一次提交的所有更改</p>\n\n\n\n\n<p><code class=\"input\">git checkout -- octocat.txt</code></p>",
        "file_browser":{"files":["blue_octocat.txt","octocat.txt","red_octocat.txt","octofamily/","octofamily/baby_octocat.txt","octofamily/momma_octocat.txt",{"name":"octofamily/octodog.txt","status":"a"},".git/branches/",".git/objects/0f/",".git/objects/14/",".git/objects/21/",".git/objects/35/",".git/objects/4b/",".git/objects/50/",".git/objects/5b/",".git/objects/86/",".git/objects/ef/",".git/objects/fa/",".git/objects/info/",".git/objects/pack/",".git/refs/heads/",".git/refs/tags/",".git/COMMIT_EDITMSG",".git/HEAD",".git/config",".git/description",".git/hooks/applypatch-msg.sample",".git/hooks/commit-msg.sample",".git/hooks/post-commit.sample",".git/hooks/post-receive.sample",".git/hooks/post-update.sample",".git/hooks/pre-applypatch.sample",".git/hooks/pre-commit.sample",".git/hooks/pre-rebase.sample",".git/hooks/prepare-commit-msg.sample",".git/hooks/update.sample",".git/index",".git/info/exclude",".git/logs/HEAD",".git/logs/refs/heads/master",".git/objects/0f/60a05f07b867fa1c7af4000985fe05f2818f8c",".git/objects/14/b2cf8cd9d24890f7168c534e5c0cd203b1d5a0",".git/objects/21/e250f8f09826955e872705290c007fa0a889e7",".git/objects/35/f80856cdfdb3df8c79781f49afbea3b33c3854",".git/objects/4b/a4e45263d07aa801ed4ef041631d081a146b41",".git/objects/50/ed4c36b03b912df1632d4c8468f77586369ecc",".git/objects/5b/e38fca73d29c41fa5fb0d8e4971f209e5612b9",".git/objects/86/bc8807ba99e381cd55d848b29b9b16ac2989a0",".git/objects/ef/ea76e7f30b0e4b0f48b91657b1b856bb5c09b5",".git/objects/fa/0bb6ce2d175673c5781b2181602556677f8708",".git/refs/heads/master"],"name":"My Octobox Repository"},
        "advice": "<p><strong>The '--'</strong>\n你可能会奇怪，为什么我会使用 <code>'--'</code> ? <code>git checkout</code>\n没有它看起来也很正常。它仅仅代表这是一个在 <code>'--'</code>之后没有其他选择的命令行。 如果你正好有一个分支叫做 <code>octocat.txt</code>，它仍然会恢复文件，而不是切换到同名分支。</p>\n"
    }
    ,

    "18":{
        "number": 18,
        "title":"创建分支",
        "instructions":"<p>当开发人员正在研究一种功能或者修复bug时，他们通常会创建可以单独提交的代码副本(aka. <code>branch</code>)。然后，当完成功能或修复bug后，他们可以合并该分支回到<code>master</code> 分支。</p>\n\n\n\n\n<p>我们要删除所有这些讨厌的octocat文件， 创建一个分支名叫 <code>clean_up</code>，并在那儿继续所有的工作：</p>\n\n\n\n\n<p><code class=\"input\">git branch clean_up</code></p>",
        "file_browser":{"files":["blue_octocat.txt","octocat.txt","red_octocat.txt","octofamily/baby_octocat.txt","octofamily/momma_octocat.txt","octofamily/octodog.txt",".git/branches/",".git/logs/refs/heads/",".git/objects/0f/",".git/objects/14/",".git/objects/21/",".git/objects/35/",".git/objects/50/",".git/objects/55/",".git/objects/5b/",".git/objects/62/",".git/objects/86/",".git/objects/fa/",".git/objects/info/",".git/objects/pack/",".git/refs/tags/","octofamily/",".git/COMMIT_EDITMSG",".git/HEAD",".git/config",".git/description",".git/hooks/applypatch-msg.sample",".git/hooks/commit-msg.sample",".git/hooks/post-commit.sample",".git/hooks/post-receive.sample",".git/hooks/post-update.sample",".git/hooks/pre-applypatch.sample",".git/hooks/pre-commit.sample",".git/hooks/pre-rebase.sample",".git/hooks/prepare-commit-msg.sample",".git/hooks/update.sample",".git/index",".git/info/exclude",".git/logs/HEAD",".git/logs/refs/heads/clean_up",".git/logs/refs/heads/master",".git/objects/0f/60a05f07b867fa1c7af4000985fe05f2818f8c",".git/objects/14/b2cf8cd9d24890f7168c534e5c0cd203b1d5a0",".git/objects/21/e250f8f09826955e872705290c007fa0a889e7",".git/objects/35/f80856cdfdb3df8c79781f49afbea3b33c3854",".git/objects/50/ed4c36b03b912df1632d4c8468f77586369ecc",".git/objects/55/950b0e75ceec1013d215e9defc3c92d5a74274",".git/objects/5b/e38fca73d29c41fa5fb0d8e4971f209e5612b9",".git/objects/62/f211f034285f8bf872606a8c6c2247f61e3b91",".git/objects/86/bc8807ba99e381cd55d848b29b9b16ac2989a0",".git/objects/fa/0bb6ce2d175673c5781b2181602556677f8708",".git/refs/heads/clean_up",".git/refs/heads/master"],"name":"My Octobox Repository"},
        "advice": "<p><strong>分支</strong></p>\n\n<p>分支是在同一时间实现不同的特性时创建的。 你不想以主分支结束并且主分支只完成一半的功能A和一半的功能B。</p>\n\n<p>当你将基础代码\n分为两个\"snakshots\"（分支）并分别提交的时候。只要其中一个准备好，就会将该分支合并到主分支并推送到远程服务器。</p>\n"
    },

    "19":{
        "number": 19,
        "title":"切换分支",
        "instructions":"<p>输入<code>git branch</code>，你会看到两个本地分支：一个主分支命<code>master</code>和新的分支命名<code>clean_up</code>。</p>\n\n\n\n\n<p>你可以切换分支使用<code>git checkout &lt;branch&gt;</code>。切换到分支 <code>clean_up</code> 使用：</p>\n\n\n\n\n<p><code class=\"input\">git checkout clean_up</code></p>",
        "file_browser":{"files":["blue_octocat.txt","octocat.txt","red_octocat.txt","octofamily/baby_octocat.txt","octofamily/momma_octocat.txt",".git/branches/",".git/objects/0f/",".git/objects/10/",".git/objects/14/",".git/objects/21/",".git/objects/35/",".git/objects/50/",".git/objects/5b/",".git/objects/86/",".git/objects/94/",".git/objects/fa/",".git/objects/info/",".git/objects/pack/",".git/refs/tags/",".git/COMMIT_EDITMSG",".git/HEAD",".git/config",".git/description",".git/hooks/applypatch-msg.sample",".git/hooks/commit-msg.sample",".git/hooks/post-commit.sample",".git/hooks/post-receive.sample",".git/hooks/post-update.sample",".git/hooks/pre-applypatch.sample",".git/hooks/pre-commit.sample",".git/hooks/pre-rebase.sample",".git/hooks/prepare-commit-msg.sample",".git/hooks/update.sample",".git/index",".git/info/exclude",".git/logs/HEAD",".git/logs/refs/heads/clean_up",".git/logs/refs/heads/master",".git/objects/0f/60a05f07b867fa1c7af4000985fe05f2818f8c",".git/objects/10/69c1b7da620a262096e637a01066de663322ca",".git/objects/14/b2cf8cd9d24890f7168c534e5c0cd203b1d5a0",".git/objects/21/e250f8f09826955e872705290c007fa0a889e7",".git/objects/35/f80856cdfdb3df8c79781f49afbea3b33c3854",".git/objects/50/ed4c36b03b912df1632d4c8468f77586369ecc",".git/objects/5b/e38fca73d29c41fa5fb0d8e4971f209e5612b9",".git/objects/86/bc8807ba99e381cd55d848b29b9b16ac2989a0",".git/objects/94/7692d17bd7121a63c89de2c1cd5187d6a1e11f",".git/objects/fa/0bb6ce2d175673c5781b2181602556677f8708",".git/refs/heads/clean_up",".git/refs/heads/master"],"name":"My Octobox Repository"},
        "advice": "<p><strong>同时</strong></p>\n\n<p>你可以使用：</p>\n\n<p><code>git checkout -b new_branch</code></p>\n\n<p>创建并切换到一个新分支。这相当于：</p>\n\n<p><code>git branch new_branch</code><br/>和<code>git checkout new_branch</code></p>\n"
    },

    "20":{
        "number": 20,
        "title":"删除所有文件",
        "instructions":"<p>现在正处于 <code>clean_up</code> 分支。可以使用  <code>git rm</code> 命令删除所有的octocats文件，它将把本地的文件删除，删除暂存区中的文件。</p>\n\n\n\n\n<p>你将会想要再一次使用通配符获取所有的octocats，并且\n清除他们，继续运行：</p>\n\n\n\n\n<p><code class=\"input\">git rm '*.txt'</code></p>",
        "file_browser":{"files":["blue_octocat.txt","octocat.txt","red_octocat.txt","octofamily/baby_octocat.txt","octofamily/momma_octocat.txt",".git/branches/",".git/objects/0f/",".git/objects/14/",".git/objects/21/",".git/objects/35/",".git/objects/50/",".git/objects/5b/",".git/objects/86/",".git/objects/9b/",".git/objects/b6/",".git/objects/fa/",".git/objects/info/",".git/objects/pack/",".git/refs/tags/",".git/COMMIT_EDITMSG",".git/HEAD",".git/config",".git/description",".git/hooks/applypatch-msg.sample",".git/hooks/commit-msg.sample",".git/hooks/post-commit.sample",".git/hooks/post-receive.sample",".git/hooks/post-update.sample",".git/hooks/pre-applypatch.sample",".git/hooks/pre-commit.sample",".git/hooks/pre-rebase.sample",".git/hooks/prepare-commit-msg.sample",".git/hooks/update.sample",".git/index",".git/info/exclude",".git/logs/HEAD",".git/logs/refs/heads/clean_up",".git/logs/refs/heads/master",".git/objects/0f/60a05f07b867fa1c7af4000985fe05f2818f8c",".git/objects/14/b2cf8cd9d24890f7168c534e5c0cd203b1d5a0",".git/objects/21/e250f8f09826955e872705290c007fa0a889e7",".git/objects/35/f80856cdfdb3df8c79781f49afbea3b33c3854",".git/objects/50/ed4c36b03b912df1632d4c8468f77586369ecc",".git/objects/5b/e38fca73d29c41fa5fb0d8e4971f209e5612b9",".git/objects/86/bc8807ba99e381cd55d848b29b9b16ac2989a0",".git/objects/9b/e6d25e2fc935a760fda816e9c3233569bbae54",".git/objects/b6/b60d21a115c3cbb3a07a4795b8e590058d419d",".git/objects/fa/0bb6ce2d175673c5781b2181602556677f8708",".git/refs/heads/clean_up",".git/refs/heads/master"],"name":"My Octobox Repository"},
        "advice": "<p><strong>删除所有文件!</strong></p>\n\n<p>删除一个文件是极好的， 但是如果你想删除整个文件夹里面的\n的文件呢? 你可以使用递归的方式删除：</p>\n\n<p><code>git rm -r folder_of_cats</code></p>\n\n<p>递归地从给定的目录中删除文件夹中的所有文件。</p>\n"
    },

    "21":{
        "number": 21,
        "title":"提交分支更改",
        "instructions":"<p>现在你已经删除了所有你需要提交更改的cats。</p>\n\n\n\n\n<p>运行 <code>git status</code> 检查你即将提交的更改。</p>\n\n\n\n\n<p><code class=\"input\">git commit -m \"Remove all the cats\"</code></p>",
        "file_browser":{"files":["octofamily/",".git/branches/",".git/objects/0f/",".git/objects/14/",".git/objects/21/",".git/objects/35/",".git/objects/50/",".git/objects/5b/",".git/objects/86/",".git/objects/ae/",".git/objects/b8/",".git/objects/fa/",".git/objects/info/",".git/objects/pack/",".git/refs/heads/",".git/refs/tags/",".git/COMMIT_EDITMSG",".git/HEAD",".git/config",".git/description",".git/hooks/applypatch-msg.sample",".git/hooks/commit-msg.sample",".git/hooks/post-commit.sample",".git/hooks/post-receive.sample",".git/hooks/post-update.sample",".git/hooks/pre-applypatch.sample",".git/hooks/pre-commit.sample",".git/hooks/pre-rebase.sample",".git/hooks/prepare-commit-msg.sample",".git/hooks/update.sample",".git/index",".git/info/exclude",".git/logs/HEAD",".git/logs/refs/heads/clean_up",".git/logs/refs/heads/master",".git/objects/0f/60a05f07b867fa1c7af4000985fe05f2818f8c",".git/objects/14/b2cf8cd9d24890f7168c534e5c0cd203b1d5a0",".git/objects/21/e250f8f09826955e872705290c007fa0a889e7",".git/objects/35/f80856cdfdb3df8c79781f49afbea3b33c3854",".git/objects/50/ed4c36b03b912df1632d4c8468f77586369ecc",".git/objects/5b/e38fca73d29c41fa5fb0d8e4971f209e5612b9",".git/objects/86/bc8807ba99e381cd55d848b29b9b16ac2989a0",".git/objects/ae/569457d4094f6a511c3f4e0f2e720412085012",".git/objects/b8/7927378c392a69102688f5d06781de3431d4c0",".git/objects/fa/0bb6ce2d175673c5781b2181602556677f8708",".git/refs/heads/clean_up",".git/refs/heads/master"],"name":"My Octobox Repository"},
        "advice": "<p><strong>'-a' 选择</strong></p>\n\n<p>如果你意外删除一个文件而没有使用 <code>'git rm'</code> 那么你仍然需要使用 <code>'git rm'</code> 把文件从工作树中删除。在 <code>'git commit'</code>上使用 <code>'-a'</code> ，这样将会自动提交已删除的文件。</p>\n\n<p><code>git commit -am \"Delete stuff\"</code></p>\n"
    },

    "22":{
        "number": 22,
        "title":"切换到主分支",
        "instructions":"<p>不错，你几乎完成了所有的cat操作...并且修复bug，切换到 <code>master</code>分支，将<code>clean_up</code>分支上的更改复制(或者 <code>merge</code>) 到<code>master</code>分支。</p>\n\n\n\n\n<p>切换到 <code>master</code> 分支:</p>\n\n\n\n\n<p><code class=\"input\">git checkout master</code></p>",
        "file_browser":{"files":[".git/branches/",".git/logs/refs/heads/",".git/objects/0f/",".git/objects/14/",".git/objects/15/",".git/objects/21/",".git/objects/2c/",".git/objects/35/",".git/objects/4b/",".git/objects/50/",".git/objects/5b/",".git/objects/86/",".git/objects/ec/",".git/objects/fa/",".git/objects/info/",".git/objects/pack/",".git/refs/heads/",".git/refs/tags/",".git/COMMIT_EDITMSG",".git/HEAD",".git/config",".git/description",".git/hooks/applypatch-msg.sample",".git/hooks/commit-msg.sample",".git/hooks/post-commit.sample",".git/hooks/post-receive.sample",".git/hooks/post-update.sample",".git/hooks/pre-applypatch.sample",".git/hooks/pre-commit.sample",".git/hooks/pre-rebase.sample",".git/hooks/prepare-commit-msg.sample",".git/hooks/update.sample",".git/index",".git/info/exclude",".git/logs/HEAD",".git/logs/refs/heads/clean_up",".git/logs/refs/heads/master",".git/objects/0f/60a05f07b867fa1c7af4000985fe05f2818f8c",".git/objects/14/b2cf8cd9d24890f7168c534e5c0cd203b1d5a0",".git/objects/15/909e6c7cb75fc6c3aff25aef78710e2acbb5d7",".git/objects/21/e250f8f09826955e872705290c007fa0a889e7",".git/objects/2c/7629dfafeeca7f872b6138fba44b0f95be2786",".git/objects/35/f80856cdfdb3df8c79781f49afbea3b33c3854",".git/objects/4b/825dc642cb6eb9a060e54bf8d69288fbee4904",".git/objects/50/ed4c36b03b912df1632d4c8468f77586369ecc",".git/objects/5b/e38fca73d29c41fa5fb0d8e4971f209e5612b9",".git/objects/86/bc8807ba99e381cd55d848b29b9b16ac2989a0",".git/objects/ec/d7401c72a673820f0cea205c5e306a6305f3bc",".git/objects/fa/0bb6ce2d175673c5781b2181602556677f8708",".git/refs/heads/clean_up",".git/refs/heads/master","octofamily/.gitkeep"],"name":"My Octobox Repository"},
        "advice": "<p><strong>pull请求</strong></p>\n\n<p>如果你在Github上面控制你的库，你可以执行下拉请求。</p>\n\n<p>一次下拉请求可以获取所有人对工程的更改，并且在决定合并更改之前做出评价。这对于远程工作者和开源工程非常不错，并将一直被使用</p>\n\n<p>检查获取更多信息\n<a href=\"https://help.github.com/articles/using-pull-requests\">pull request help page</a></p>\n"
    },

    "23":{
        "number": 23,
        "title":"准备合并",
        "instructions":"<p>把<code>clean_up</code>分支的改变合并到\n <code>master</code>分支。它非常简单。</p>\n\n\n\n\n<p>现在已经在 <code>master</code> 分支上了，合并 <code>clean_up</code> 分支到主分支:</p>\n\n\n\n\n<p><code class=\"input\">git merge clean_up</code></p>",
        "file_browser":{"files":[".git/branches/",".git/logs/refs/heads/",".git/objects/0f/",".git/objects/14/",".git/objects/21/",".git/objects/35/",".git/objects/4b/",".git/objects/50/",".git/objects/59/",".git/objects/5b/",".git/objects/7d/",".git/objects/86/",".git/objects/c8/",".git/objects/fa/",".git/objects/info/",".git/objects/pack/",".git/refs/",".git/refs/heads/",".git/refs/tags/",".git/COMMIT_EDITMSG",".git/HEAD",".git/config",".git/description",".git/hooks/applypatch-msg.sample",".git/hooks/commit-msg.sample",".git/hooks/post-commit.sample",".git/hooks/post-receive.sample",".git/hooks/post-update.sample",".git/hooks/pre-applypatch.sample",".git/hooks/pre-commit.sample",".git/hooks/pre-rebase.sample",".git/hooks/prepare-commit-msg.sample",".git/hooks/update.sample",".git/index",".git/info/exclude",".git/logs/HEAD",".git/logs/refs/heads/clean_up",".git/logs/refs/heads/master",".git/objects/0f/60a05f07b867fa1c7af4000985fe05f2818f8c",".git/objects/14/b2cf8cd9d24890f7168c534e5c0cd203b1d5a0",".git/objects/21/e250f8f09826955e872705290c007fa0a889e7",".git/objects/35/f80856cdfdb3df8c79781f49afbea3b33c3854",".git/objects/4b/825dc642cb6eb9a060e54bf8d69288fbee4904",".git/objects/50/ed4c36b03b912df1632d4c8468f77586369ecc",".git/objects/59/dfce7bc0534addfffd75dd6ef632784addef33",".git/objects/5b/e38fca73d29c41fa5fb0d8e4971f209e5612b9",".git/objects/7d/466c271f0034e38b409ef597a5b3a506bd0b1a",".git/objects/86/bc8807ba99e381cd55d848b29b9b16ac2989a0",".git/objects/c8/7b90dcf40c9ad53a0baff3cce4e1b6499b6860",".git/objects/fa/0bb6ce2d175673c5781b2181602556677f8708",".git/refs/heads/clean_up",".git/refs/heads/master","blue_octocat.txt","octocat.txt","octofamily/.gitkeep","octofamily/baby_octocat.txt","octofamily/momma_octocat.txt","red_octocat.txt"],"name":"My Octobox Repository"},
        "advice": "<p><strong>合并冲突</strong></p>\n\n<p>同一时间对同一文件进行不同的修改时需要合并冲突。大多数人遇见冲突时感觉到非常恐惧，但是不要害怕！它们没有那么可怕，你只需要决定哪些代码需要保留。</p>\n\n<p>合并冲突在这个课程中是遍布全局的，如果你想了解更多，查看文章 <a href=\"http://git-scm.com/book\">Pro Git book</a> 在\n<a href=\"http://git-scm.com/docs/git-merge#_how_conflicts_are_presented\">如何抛出冲突</a>。</p>\n"
    },

    "24":{
        "number": 24,
        "title":"保持文件整洁",
        "instructions":"<p>恭喜你！你首次成功解决冲突并合并代码，接下来就是删除 <code>clean_up</code> 分支。</p>\n\n\n\n\n<p>使用 <code>git branch -d &lt;branch name&gt;</code> 删除分支。马上删除<code>clean_up</code>分支:</p>\n\n\n\n\n<p><code class=\"input\">git branch -d clean_up</code></p>",
        "file_browser":{"files":[".git/branches/",".git/logs/refs/heads/",".git/objects/0f/",".git/objects/14/",".git/objects/21/",".git/objects/35/",".git/objects/4b/",".git/objects/50/",".git/objects/5b/",".git/objects/5c/",".git/objects/86/",".git/objects/c9/",".git/objects/d4/",".git/objects/fa/",".git/objects/info/",".git/objects/pack/",".git/refs/heads/",".git/refs/tags/",".git/COMMIT_EDITMSG",".git/HEAD",".git/ORIG_HEAD",".git/config",".git/description",".git/hooks/applypatch-msg.sample",".git/hooks/commit-msg.sample",".git/hooks/post-commit.sample",".git/hooks/post-receive.sample",".git/hooks/post-update.sample",".git/hooks/pre-applypatch.sample",".git/hooks/pre-commit.sample",".git/hooks/pre-rebase.sample",".git/hooks/prepare-commit-msg.sample",".git/hooks/update.sample",".git/index",".git/info/exclude",".git/logs/HEAD",".git/logs/refs/heads/clean_up",".git/logs/refs/heads/master",".git/objects/0f/60a05f07b867fa1c7af4000985fe05f2818f8c",".git/objects/14/b2cf8cd9d24890f7168c534e5c0cd203b1d5a0",".git/objects/21/e250f8f09826955e872705290c007fa0a889e7",".git/objects/35/f80856cdfdb3df8c79781f49afbea3b33c3854",".git/objects/4b/825dc642cb6eb9a060e54bf8d69288fbee4904",".git/objects/50/ed4c36b03b912df1632d4c8468f77586369ecc",".git/objects/5b/e38fca73d29c41fa5fb0d8e4971f209e5612b9",".git/objects/5c/3ab5289b23fc84eb87acc1279304ca2b22c230",".git/objects/86/bc8807ba99e381cd55d848b29b9b16ac2989a0",".git/objects/c9/3e4b03b27e4c19f66295b8076d6592546b7d80",".git/objects/d4/3dc3f71ab1af6cf01fb6b2acf2f1bbcd408cbe",".git/objects/fa/0bb6ce2d175673c5781b2181602556677f8708",".git/refs/heads/clean_up",".git/refs/heads/master","octofamily/.gitkeep"],"name":"My Octobox Repository"},
        "advice": "<p><strong>强制删除</strong></p>\n\n<p>如果你一直在一个特性分支上工作并且你决定你真的不再需要这个特性了，那么你决定删除这个分支。但是<code>git branch -d bad_feature</code> 不再起作用。 这是因为 <code>-d</code> 不会让你删除还没有合并的东西。</p>\n\n<p>你也可以添加 <code>--force (-f)</code> 选项或者使用 <code>-D</code>， <code>-d -f</code>可以一起使用在一个命令中删除分支</p>\n"
    },

    "25":{
        "number": 25,
        "title":"The Final Push",
        "instructions":"<p>这个我们的最后一步。我非常自豪你已经走到了现在，和你一起学习Git非常好。现在剩下的是 push 所有的东西到你的远程仓库中，并且你已经完成！</p>\n\n<p><code class=\"input\">git push</code></p>\n",
        "file_browser":{"files":[".git/branches/",".git/logs/refs/heads/",".git/objects/0f/",".git/objects/14/",".git/objects/21/",".git/objects/35/",".git/objects/4b/",".git/objects/50/",".git/objects/5b/",".git/objects/86/",".git/objects/b8/",".git/objects/c7/",".git/objects/d0/",".git/objects/fa/",".git/objects/info/",".git/objects/pack/",".git/refs/heads/",".git/refs/tags/",".git/COMMIT_EDITMSG",".git/HEAD",".git/ORIG_HEAD",".git/config",".git/description",".git/hooks/applypatch-msg.sample",".git/hooks/commit-msg.sample",".git/hooks/post-commit.sample",".git/hooks/post-receive.sample",".git/hooks/post-update.sample",".git/hooks/pre-applypatch.sample",".git/hooks/pre-commit.sample",".git/hooks/pre-rebase.sample",".git/hooks/prepare-commit-msg.sample",".git/hooks/update.sample",".git/index",".git/info/exclude",".git/logs/HEAD",".git/logs/refs/heads/master",".git/objects/0f/60a05f07b867fa1c7af4000985fe05f2818f8c",".git/objects/14/b2cf8cd9d24890f7168c534e5c0cd203b1d5a0",".git/objects/21/e250f8f09826955e872705290c007fa0a889e7",".git/objects/35/f80856cdfdb3df8c79781f49afbea3b33c3854",".git/objects/4b/825dc642cb6eb9a060e54bf8d69288fbee4904",".git/objects/50/ed4c36b03b912df1632d4c8468f77586369ecc",".git/objects/5b/e38fca73d29c41fa5fb0d8e4971f209e5612b9",".git/objects/86/bc8807ba99e381cd55d848b29b9b16ac2989a0",".git/objects/b8/9d788efc294a08bb495bc5aee5b57045b05b86",".git/objects/c7/cfc0f90b6cb411d60dff89fe64251340d8352e",".git/objects/d0/d93e2aebf11b7798c537b02fa1e0e5e0db1c57",".git/objects/fa/0bb6ce2d175673c5781b2181602556677f8708",".git/refs/heads/master","octofamily/.gitkeep"],"name":"My Octobox Repository"},
        "advice":"<p><strong>学习更多关于Git的知识</strong></p>\n\n<p>在这个课程中，我们只触及到Git的表面。这有更多的东西你可以做。 检测查看全面的Git文档 <a href=\"http://git-scm.com/docs\">Git documentation</a>\n，使用列表</p>\n\n<p>The <a href=\"http://git-scm.com/book\">Pro Git book</a>，由 Scott Chacon著，是一个非常不错的资源，教你关于Git的内部工作原理。</p>\n\n<p><a href=\"https://help.github.com\">help.github</a> 一般对于涉及到Git的工程，使用 GitHub 训练都是非常不错的。</p>\n"
    }

};

